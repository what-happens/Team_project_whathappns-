[
  {
    "stage_id": 2,
    "title_id": 0,
    "level_id": 0,
    "title": "CSS 알아보기",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "CSS란?",
        "contents": [
          {
            "desc": "- CSS(Cascading Style Sheets)는 우리가 작성한 HTML의 스타일, 레이아웃 등을 꾸미는 역할을 합니다. CSS를 한번 작성해 여러 HTML에 재사용할 수 있어 반복 작업을 줄일 수 있습니다.- CSS를 사용하여 구조와 스타일을 분리해 스타일을 변경할 때 HTML코드를 수정할 필요가 없어지고, 여러 페이지에 동일한 스타일을 쉽게 적용해 웹사이트 전체에 일관된 디자인을 유지하고, 여러번 사용해 재사용성과 효율성을 높일 수 있습니다.",
            "code": "none",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 0,
    "level_id": 1,
    "title": "선택자",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "전체 선택자",
        "contents": [
          {
            "desc": "전체 선택자는 *를 사용해HTML 문서 내의 모든 요소를 선택합니다. html 태그를 포함한 모든 태그에 스타일을 적용할 수 있습니다.",
            "code": "* {\n\tfont-size: 24px;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "아이디 선택자",
        "contents": [
          {
            "desc": "아이디 선택자는 # 을 사용해 특정 요소를 선택해 스타일을 적용시키며, HTML 문서 내에서 한 번만 사용될 수 있는 고유한 식별자입니다.",
            "code": "#nameInput {\n\tcolor: teal;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "클래스 선택자",
        "contents": [
          {
            "desc": "클래스 선택자는 `.` 를 사용해 특정 요소를 선택해 스타일을 적용시키며, 재사용성이 높아 많이 사용되는 선택자입니다.",
            "code": ".btn {\n\tcolor: hotpink;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 3,
        "sub_name": "타입 선택자",
        "contents": [
          {
            "desc": "타입 선택자는 특정 HTML 태그를 선택해 스타일을 적용합니다.",
            "code": "input {\n\tbackground-color: tomato;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 1,
    "level_id": 1,
    "title": "복합 선택자-1",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "그룹 선택자",
        "contents": [
          {
            "desc": "여러 개의 선택자를 쉼표”,”로 구분하여 한 번에 동일한 스타일을 적용할 수 있어 코드의 중복을 줄이고, 스타일을 일관되게 적용할 수 있습니다.",
            "code": "h1,\nh2,\nh3 {\n\tcolor: tomato;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "자손 선택자",
        "contents": [
          {
            "desc": "자손 선택자는 특정 요소의 모든 하위 요소를 선택합니다. 공백” ”으로 부모와 자손을 구분합니다.",
            "code": "div p {\n\tcolor: gold;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "자식 선택자",
        "contents": [
          {
            "desc": "자식 선택자는 >로 특정 요소의 직계 자식 요소만 선택합니다.",
            "code": "section > p {\n\tcolor: royalblue;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 2,
    "level_id": 1,
    "title": "복합 선택자-2",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "일반 형제 선택자",
        "contents": [
          {
            "desc": "일반 형제 선택자는 ~ 를 사용해 구분합니다. 뒤에 나오는 형제만 선택합니다.",
            "code": "section ~ p {\n\ttext-decoration: underline;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "인접 형제 선택자",
        "contents": [
          {
            "desc": "일반 형제 선택자는 뒤에 나오는 형제만 선택하지만, 인접 형제 선택자는 + 로 바로 뒤에 인접한 형제만 선택합니다.",
            "code": "section + p {\n\tbackground: yellow;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 0,
    "level_id": 2,
    "title": "텍스트 색상, 글꼴 수정하기",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "color로 색상 설정하기",
        "contents": [
          {
            "desc": "텍스트의 색상은 color 속성으로 설정합니다. 색상을 표현하는 방법에는 키워드(red, blue), Hex코드(#으로 시작하는 16진수), rgb(), rgba()등 함수 등을 사용할 수 있습니다.",
            "code": "h1 {\n\tcolor: red;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "글꼴 설정하기",
        "contents": [
          {
            "desc": "글꼴은 텍스트의 시각적 특성을 결정하는 중요한 요소입니다. font-family 속성을 사용해 글꼴을 지정할 수 있습니다. 폰트를 적용하는데는 link, import, font-face를 사용하는 3가지 방법이 있습니다.",
            "code": "<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap\" rel=\"stylesheet\"/>\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300&display=swap');\n@font-face {\n\tfont-family: 'Pretendard-Regular';\n\tsrc: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\n\tfont-weight: 400;\n\tfont-style: normal;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "글꼴 크기 설정하기",
        "contents": [
          {
            "desc": "텍스트의 크기는 font-size 속성으로 조정할 수 있습니다. 크기 단위로는 px, em, rem등의 단위가 자주 사용됩니다. ",
            "code": "p {\n\tfont-size: 24px;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 3,
        "sub_name": "글꼴 굵기 설정하기",
        "contents": [
          {
            "desc": "텍스트의 굵기는 font-weight으로 설정할 수 있습니다. normal(기본값), bold(굵게), lighter(부모 요소보다 한 단계 가볍게), bolder(부모 요소보다 한 단계 굵게) 등의 키워드나 100부터 900까지의 숫자 값을 사용할 수 있습니다.",
            "code": ".sentence1 {\n\tfont-weight: normal;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 1,
    "level_id": 2,
    "title": "텍스트 장식, 정렬하기",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "텍스트 장식하기",
        "contents": [
          {
            "desc": "text-decoration 속성은 텍스트에 장식을 추가하는 단축 속성입니다. 이 속성은 다음과 같은 개별 속성들을 포함합니다.\n- text-decoration-line: 선의 위치 (underline, overline, line-through)- text-decoration-color: 선의 색상/n - text-decoration-style: 선의 스타일 (solid, wavy, dashed 등)\n - text-decoration-thickness: 선의 두께",
            "code": ".text4{\n\ttext-decoration: underline wavy blue;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "텍스트 정렬하기",
        "contents": [
          {
            "desc": "text-align 속성은 텍스트의 가로 정렬을 설정합니다. 이 속성은 블록 레벨 요소 내의 인라인 콘텐츠(텍스트, 인라인 요소)를 정렬하는 데 사용됩니다. 주요 값으로는 다음과 같은 것들이 있습니다.\n- left: 왼쪽 정렬 (기본값)\n- right: 오른쪽 정렬\n- center: 중앙 정렬\n- justify: 양쪽 정렬 (마지막 줄 제외)\n- justify-all: 양쪽 정렬 (마지막 줄 포함)",
            "code": ".item1 {\n\ttext-align: center;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "행간 조정하기",
        "contents": [
          {
            "desc": "line-height 속성은 텍스트 줄 사이의 간격을 설정합니다. 이 속성은 텍스트의 가독성에 큰 영향을 미치므로 적절히 조정하는 것이 중요합니다.\n line-height는 다음과 같은 값을 사용할 수 있습니다:\n 숫자: 요소의 글꼴 크기에 대한 배수 (예: 1.5)\n 길이: px, em 등의 단위 (예: 20px, 1.5em) \n 백분율: 요소의 글꼴 크기에 대한 백분율 (예: 150%) \n normal: 브라우저의 기본값",
            "code": ".item1 {\n\tline-height: 1.8;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 0,
    "level_id": 3,
    "title": "가상클래스-1",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "가상클래스",
        "contents": [
          {
            "desc": "가상 클래스 선택자(Pseudo-class selectors)는 요소의 특정 상태를 선택할 수 있게 해줍니다. 이들은 콜론(:)을 사용하여 표현됩니다. \n :link는 아직 방문하지 않은 링크를 선택합니다. \n :visited는 이미 방문한 링크를 선택합니다. \n :hover는 마우스 포인터가 올라간 요소를 선택합니다.",
            "code": "a:link {\n\tcolor: blue;\n\ttext-decoration: none;\n}\na:visited {\n\tcolor: red;\n\ttext-decoration: underline;\n}\na:hover {\n\tcolor: purple;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 1,
    "level_id": 0,
    "title": "가상클래스-2",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "",
        "contents": [
          {
            "desc": ":active는 마우스로 클릭하고 있는 요소를 선택합니다\n :focus는현재 초점을 가진 요소를 선택합니다.",
            "code": ".link-test:active {\n\tcolor: orange;\n}\n.link-test:focus {\n\toutline: 2px solid green;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 2,
    "title_id": 0,
    "level_id": 3,
    "title": "가상요소",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "::before와 ::after",
        "contents": [
          {
            "desc": "가상요소는 선택한 요소의 특정 부분에 스타일을 적용할 수 있게 해줍니다. 이들은 이중 콜론(::)을 사용하여 표현됩니다. \n1. ::before와 ::after - 선택한 요소의 내용 앞이나 뒤에서 새로운 요소를 만들어 새로운 콘텐츠를 추가할 수 있게 해줍니다. 주로 content속성을 사용해 장식적인 요소를 추가하거나, 기능적인 목적으로 사용됩니다.",
            "code": ".header::before {\n\tcontent: '❤️';\n}\n.header::after {\n\tcontent: '❤️';\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "::placeholder",
        "contents": [
          {
            "desc": "<input>태그 같은 요소의 placeholder 텍스트에 스타일을 적용할 수 있게 해줍니다.",
            "code": "::placeholder {\n\tcolor: #999;\nfont-style: italic;\n\tfont-size: 14px;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 0,
    "level_id": 0,
    "title": "display 속성-1",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "block",
        "contents": [
          {
            "desc": "요소를 블록 레벨 요소로 만듭니다. 새로운 줄에서 시작하고, 가능한 전체 너비를 차지하게 합니다. \nwidth, height, margin, padding 속성을 모두 사용할 수 있습니다.",
            "code": ".block {\n\tdisplay: block;\n\tbackground-color: white;\n\tborder: 1px solid #333;\n\tpadding: 10px;\n\tmargin: 5px;\n\theight: 60px;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "inline",
        "contents": [
          {
            "desc": "요소를 인라인 요소로 만듭니다. 줄 바꿈 없이 다른 요소와 같은 줄에 배치될 수 있고, 너비는 내용에 맞게 설정됩니다. \nwidth, height 속성을 사용할 수 없으며, margin 속성은 좌우만 적용됩니다. ",
            "code": ".inline {\n\tdisplay: inline;\n\tbackground-color: teal;\n\tborder: 1px solid #333;\n\tpadding: 10px;\n\tmargin: 5px;\n\theight: 60px;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "inline-block",
        "contents": [
          {
            "desc": "인라인 요소와 블록 요소의 특성을 결합합니다. \n텍스트 흐름에 따라 배치되지만 width, height, margin, padding을 모두 지정할 수 있습니다.",
            "code": ".inline-block {\n\tdisplay: inline-block;\n\twidth: 150px;\n\theight: 50px;\n\tbackground-color: #f0f0f0;\n\tborder: 1px solid #333;\n\tpadding: 10px;\n\tmargin: 5px;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 1,
    "level_id": 0,
    "title": "display 속성-2",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "flex",
        "contents": [
          {
            "desc": "flex는 뒤에서 더 자세하게 배울 예정입니다. 어떤 역할을 하는지만 미리 알아보세요.\nflex는 가로, 세로 축을 이용해 요소들을 1차원으로 배치합니다. 보통 가로줄이나 세로줄을 만들어 요소들을 배치할 때 사용합니다. 자식 요소들의 크기와 순서를 유연하게 조절할 수 있습니다.",
            "code": ".container1 {\n\tdisplay: flex;\n\tjustify-content: space-between;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "grid",
        "contents": [
          {
            "desc": "grid는 뒤에서 더 자세하게 배울 예정입니다. 어떤 역할을 하는지만 미리 알아보세요.\n격자 형태의 2차원적 레이아웃 모델을 제공합니다. 복잡한 레이아웃을 쉽게 구현할 수 있습니다.",
            "code": ".container2 {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 1fr);\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "none",
        "contents": [
          {
            "desc": "none은 요소를 완전히숨깁니다. 요소가 렌더링되지 않으며, 레이아웃에서 공간을 차지하지 않습니다. 접근성 트리에서도 제거되어 스크린 리더에 읽히지 않습니다.",
            "code": ".container3 {\n\tdisplay: none;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 0,
    "level_id": 1,
    "title": "이미지 비율 유지하기",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "aspect-ratio 속성 사용하기",
        "contents": [
          {
            "desc": "aspect-ratio속성은 요소의 기본 가로 세로 비율을 설정합니다.\n사용 방법: \naspect-ratio: 가로/세로",
            "code": "img {\n\twidth: 300px;\n\taspect-ratio: 2 / 1;\n\tobject-fit: cover;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "padding 백분율 값 활용하기",
        "contents": [
          {
            "desc": "padding의 백분율 값은 항상 부모 요소의 너비를 기준으로 계산됩니다. 이 특성을 이용하여 반응형 이미지 컨테이너를 만들 수 있습니다.\n작동 원리:\n1. height:0 은 요소의 높이 값을 0으로 초기화합니다. 이는 padding 만으로 높이를 제어하기 위함입니다.\n2. padding-top:50% 는 컨테이너의 높이를 너비의 50%로 설정합니다. 이 값을 조절하여 원하는 비율을 만들 수 있습니다.\n3. position: absolute 로 이미지를 설정해 컨테이너를 꽉 채웁니다. 이 때 이미지의 원래 비율이 설정한 비율과 일치하지 않으면 이미지가 왜곡될 수 있습니다.\n4. object-fit: cover는 이미지 왜곡을 방지하기 위해 사용됩니다.",
            "code": ".thumbnail {\n\tposition: relative;\n\twidth: 100%;\n\theight: 0;\n\tpadding-top: 50%;\n}\n.thumbnail img {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: cover;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 0,
    "level_id": 2,
    "title": "position 속성",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "static, relative, absolute",
        "contents": [
          {
            "desc": "position 속성은 문서상에 요소를 배치하는 방법을 지정합니다. 다양한 position 속성값들이 있으며 각각 고유한 특성을 가지고 있습니다.\n1. static: position 속성의 기본값입니다. 이 값은 “고정된” 상태를 의미합니다. 이 속성이 적용된 요소는 HTML을 작성한 순서대로 정상적인 흐름에 따라 위치가 지정됩니다.\n2. relative: 요소를 상대적으로 배치합니다. `relative`로 설정된 요소는 다른 콘텐츠들의 위치에 영향을 미치지 않으면서 자신만의 위치만을 조정할 수 있습니다.\n3. absolute: 요소를 절대적인 위치로 배치합니다. `absolute` 요소는 일반적인 문서 흐름에서 제거되어 독립적으로 위치를 잡습니다.",
            "code": ".static-box {\n\tposition: static;\n\tborder: 2px solid black;\n\tpadding: 10px;\n}\n.relative-box {\n\tposition: relative;\n\tleft: 20px;\n\ttop: 20px;\n\tborder: 2px solid red;\n\tpadding: 10px;\n}\n.container {\n\tposition: relative;\n\theight: 100px;\n\tborder: 2px solid black;\n}\n.absolute-box {\n\tposition: absolute;\n\tright: 10px;\n\tbottom: 10px;\n\tborder: 2px solid blue;\n\tpadding: 5px;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "fixed, sticky",
        "contents": [
          {
            "desc": "1. fixed: 요소를 브라우저 창을 기준으로 고정 위치에 배치합니다. fixed가 적용된 요소는 일반적인 문서 흐름에서 제거되고, 스크롤을 해도 화면의 같은 위치에 고정되어 있습니다. \n2. sticky: sticky`는 스크롤 위치에 따라 relative가 될 수도, fixed 가 될 수도 있습니다. 스크롤 전에는 relative, 지정된 임계점에 도달하면 fixed처럼 동작합니다.",
            "code": ".fixed-box {\n\tposition: fixed;\n.sticky-box {\n\tposition: sticky;\n\ttop: 0;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 0,
    "level_id": 3,
    "title": "레이아웃-float",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "float",
        "contents": [
          {
            "desc": "float은 요소를 페이지의 일반적인 레이아웃 흐름에서 벗어나게 하여, 텍스트나 다른 인라인 요소들이 그 주위를 감싸도록 만드는 레이아웃 기술입니다. float를 사용하면 요소가 물 위에 있는 것처럼 작동하며, 컨테이너의 우측 혹은 좌측으로 이동하게 됩니다. \nleft: 요소를 왼쪽으로 띄웁니다.\nright: 요소를 오른쪽으로 띄웁니다.\nnone: 기본값으로, 요소를 띄우지 않습니다.",
            "code": ".float-left {\n\tfloat: left;\n}\n.float-right {\n\tfloat: right;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 1,
    "level_id": 3,
    "title": "레이아웃-flex",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "flex",
        "contents": [
          {
            "desc": "flex는 1차원적 레이아웃(행 또는 열)을 쉽게 만들 수 있으며, 요소들의 크기와 순서를 동적으로 조절할 수 있습니다.\n이 요소를 사용하기 위해서는 부모 요소를 display: flex 로 설정해야 합니다. 부모 요소는 flex-container, 자식 요소는 flex-item이 됩니다.\nflex-contianer(부모) 에 사용되는 속성은 다음과 같습니다.\n1. flex-direction은 주축의 방향을 설정합니다. 기본값은 row입니다.\n2. row: 기본값. 왼쪽에서 오른쪽 (주축이 행 방향)\n3. column: 위에서 아래 방향 (주축이 열 방향)\n주축의 아이템 정렬: 주축을 기준으로 배열의 위치를 조절하거나 아이템 간의 설정을 할 수 있습니다.\njustify-content: 주축을 기준으로 아이템을 정렬합니다.\n1. flex-start: 시작점에 정렬합니다.\n2. flex-end: 끝점에 정렬합니다.\n3. center: 가운데 정렬합니다.\n4. space-between: 아이템 사이에 동일한 간격을 설정합니다.\n5. space-around: 아이템 주변에 동일한 간격을 설정합니다.\n6. space-evenly: 아이템 주변과 시작과 끝에 동일한 간격을 설정합니다.\nalign-items 는 아이템을 교차 축을 기준으로 정렬합니다.\n1. stretch: 기본값. 교차축을 채우기 위해 아이템을 늘립니다.\n2. flex-start: 시작점에 정렬\n3. flex-end: 끝점에 정렬\n4. center: 가운데 정렬\n5. baseline: 텍스트의 기준선에 정렬",
            "code": ".container {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tbackground-color: #f0f0f0;\n\tpadding: 10px;\n}\n.item {\n\tbackground-color: #4967d8;\n\tcolor: white;\n\tpadding: 10px;\n\ttext-align: center;\n\tborder-radius: 5px;\n}",
            "img": "none"
          }
        ]
      }
    ]
  },
  {
    "stage_id": 3,
    "title_id": 2,
    "level_id": 3,
    "title": "레이아웃-grid",
    "subtitles": [
      {
        "sub_id": 0,
        "sub_name": "grid-1",
        "contents": [
          {
            "desc": "이 요소를 사용하기 위해서는 부모 요소를 display: grid 로 설정해야 합니다. grid는 2차원 레이아웃을 담당하고, 행과 열을 동시에 제어할 수 있어 복잡한 레이아웃을 쉽게 만들 수 있습니다.\n그리드의 기본 구성 요소:\n1. 그리드 컨테이너: 그리드의 가장 바깥 영역입니다.\n2. 그리드 셀: 그리드의 한 칸을 의미합니다.\n3. 그리드 아이템: 그리드 컨테이너의 자식 요소들을 말합니다.\n4. 그리드 트랙은 그리드의 행 또는 열을 의미합니다.\n5. 그리드 라인과 그리드 넘버: 그리드 셀을 구분하는 선과 그리드 라인의 각 번호를 말합니다.\n6. 그리드 갭: 그리드 셀 사이의 간격을 의미합니다.\n7. 그리드 에어리어: 그리드 셀의 집합을 말합니다.\ngrid-container 에 사용하는 속성\n1. 행 방향과 열 방향 설정\n2. grid-template-columns는 열방향 그리드 트랙의 사이즈를 설정하고 grid-template-rows 행방향 그리드 트랙의 사이즈를 설정합니다.\n3. 픽셀, 백분율, fr 단위를 사용할 수 있습니다. fr은 분수(fraction)의 의미로 컨테이너를 분할해줍니다.",
            "code": ".container {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, minmax(100px, 1fr));\n\tgap: 20px;\n\tpadding: 20px;\n}\n.item {\n\tbackground-color: teal;\n\ttext-align: center;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 1,
        "sub_name": "grid-2",
        "contents": [
          {
            "desc": "수평과 수직 정렬:\n그리드 컨테이너와 아이템의 정렬을 위해 다음과 같은 속성들을 사용할 수 있습니다.\n아래 속성들은 그리드 아이템을 트랙 단위로 정렬합니다.\n1. align-content: 그리드 아이템을 수직(열) 방향으로 정렬합니다.\n2. justify-content: 그리드 아이템을 수평(행) 방향으로 정렬합니다.\n두 속성 모두 stretch  center start end space-around space-between space-evenly 값을 사용할 수 있습니다.\n- 아래 속성들은 각 그리드 셀 내에서 아이템을 정렬합니다.\n1. align-items: 각 셀 내에서 그리드 아이템을 수직(열) 방향으로 정렬합니다.\n2. justify-items: 각 셀 내에서 그리드 아이템을 수평(행) 방향으로 정렬합니다.\n두 속성 모두 stretch, center, start, end 를 사용할 수 있습니다.",
            "code": ".container {\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, 100px);\n\tgrid-template-rows: repeat(2, 100px);\n\theight: 300px;\n\tbackground-color: #f0f0f0;\n\tjustify-content: center;\n\talign-content: center;\n\tjustify-items: center;\n\talign-items: center;\n}",
            "img": "none"
          }
        ]
      },
      {
        "sub_id": 2,
        "sub_name": "grid-3",
        "contents": [
          {
            "desc": "그리드 아이템 속성\n1. grid-area: 그리드 아이템의 위치와 크기를 지정하는 단축 속성입니다.\n - 각각의 그리드 라인을 의미하는 grid-row-start , grid-column-start, grid-row-end, grid-column-end 순서대로 grid-area의 값에 들어갑니다.\n- 예시: grid-area: 1/1/2/4 \nz-index: 그리드 내에서 z-index를 사용하여 아이템의 쌓임 순서를 제어할 수 있습니다.",
            "code": ".container {\n\tdisplay: grid;\n\tgrid-template-areas:\n\t\t\"header header header\"\n\t\t\"main main main\";\n\tgap: 10px;\n\tpadding: 20px;\n}\n.item-one {\n\tgrid-area: header; \n}",
            "img": "none"
          }
        ]
      }
    ]
  }
]
